*&---------------------------------------------------------------------*
*& Report ZPROGRAM_6
*&---------------------------------------------------------------------*
*&	" this program is all about static variables, static methods, static constructors and me.
*&---------------------------------------------------------------------*
REPORT ZPROGRAM_6.


CLASS STATIC_CLASS DEFINITION.
  PUBLIC SECTION.
  CLASS-DATA: X TYPE I, Y TYPE STRING, Z TYPE I.
  METHODS: CONSTRUCTOR, PRINT_XYZ.
  CLASS-METHODS: PRINT_X IMPORTING VAL_X TYPE I, PRINT_Y IMPORTING VAL_Y TYPE STRING, PRINT_Z IMPORTING VAL_Z TYPE I,CLASS_CONSTRUCTOR. "class_constructor is in static block so it will be executed only once.
ENDCLASS.

CLASS STATIC_CLASS IMPLEMENTATION.
  METHOD PRINT_X.
    X = VAL_X.
    WRITE: ' VALUE OF X IS ',X. SKIP.
    ENDMETHOD.
  METHOD PRINT_Y.
    Y = VAL_Y.
    WRITE: ' VALUE OF Y IS  ',Y.SKIP.
    ENDMETHOD.
  METHOD PRINT_Z.
   " Z = VAL_Z.
    DATA: Z TYPE I VALUE 15 .
    WRITE: ' VALUE OF Z IS ',Z.SKIP.
    ENDMETHOD.
   METHOD CLASS_CONSTRUCTOR.
     WRITE: ' STATIC CONSTRUCTOR INVOKED.'.SKIP.
     ENDMETHOD.
   METHOD CONSTRUCTOR.
     WRITE: ' CONSTRUCTOR INVOKED'. SKIP.
     ENDMETHOD.
   METHOD PRINT_XYZ.
   WRITE: 'THIS IS XYZ'.SKIP.
     ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.
DATA: DISPLAY_XYZ TYPE REF TO STATIC_CLASS, display_xyz1 TYPE REF TO static_class.
CREATE OBJECT: DISPLAY_XYZ, display_xyz1.
CALL METHOD: DISPLAY_XYZ->PRINT_XYZ,STATIC_CLASS=>PRINT_X EXPORTING VAL_X = 12, STATIC_CLASS=>PRINT_Y EXPORTING VAL_Y = 'THIS IS A TEXT MESSAGE ',STATIC_CLASS=>PRINT_Z EXPORTING VAL_Z = 19 .
CALL METHOD: DISPLAY_XYZ1->PRINT_XYZ,STATIC_CLASS=>PRINT_X EXPORTING VAL_X = 12, STATIC_CLASS=>PRINT_Y EXPORTING VAL_Y = 'THIS IS A TEXT MESSAGE ',STATIC_CLASS=>PRINT_Z EXPORTING VAL_Z = 19 .
END-OF-SELECTION.