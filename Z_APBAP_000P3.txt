*&---------------------------------------------------------------------*
*& Report ZPROGRAM_3
*&---------------------------------------------------------------------*
*& PROGRAM ON SERIES MENTIONED BELOW
*&---------------------------------------------------------------------*
REPORT ZPROGRAM_3.
DATA : X TYPE I,Y TYPE I, Z TYPE I, N TYPE I.

PERFORM AP.
PERFORM GP.
PERFORM FIBBICONI.
"PERFORM PRIME_NUMBER.
"PERFORM SPECIAL_NUMBER.
PERFORM ARMSTRONG_NUMBER.

FORM AP.
  X = 20.
  N = 5.
  WRITE:'AP SERIES STARTS FROM 20 AND COMMON DIFFERENCE IS 12 AND WILL GOT TO 5 TIMES'.SKIP.
  DO N + 1 TIMES.
    WRITE X.
    ADD 12 TO X.
  ENDDO.
  ENDFORM.

FORM GP.
  X = 1.
  Y = 2.
  N = 1.
  WRITE:'GP SERIES STARTS FROM 1 AND COMMON RATIO IS 2 AND WILL GOT TO 5 TIMES'.SKIP.
 DO 6 TIMES.
    WRITE X.
    X = X * ( Y ** N ).
  ENDDO.

ENDFORM.

FORM FIBBICONI.
  WRITE : / 'FIBICONNI SERIES '.SKIP.
  X = 0.
  Y = 1.
  MOVE 1 TO Y.
  WRITE: X, ' ' , Y.
  DO 10 TIMES.
    Z = X + Y.
    X = Y.
    Y = Z.
    WRITE Z.
  ENDDO.
ENDFORM.

DATA: LV_DATA1 TYPE P, LV_DIGIT TYPE I, LV_FINAL TYPE I, LV_ARM TYPE I, LV_DATA2 TYPE P.

FORM ARMSTRONG_NUMBER.
  LV_DATA1 = 371.
  WRITE: / 'GIVEN NUMBER 371. CHECKING WHETHER IT IS ARMSTRONG NUMBER OR NOT.'.SKIP.
  LV_DATA2 = LV_DATA1.
  WHILE LV_DATA2 <> 0.
    LV_DIGIT = LV_DATA2 MOD 10.
    LV_ARM = LV_ARM + ( LV_DIGIT * LV_DIGIT * LV_DIGIT ).
    LV_DATA2 = TRUNC( LV_DATA2 / 10 ). " CASE of 0
  ENDWHILE.

  IF LV_DATA1 EQ LV_ARM.
    WRITE: 'IT IS AN ARMSTRONG NUMBER'.SKIP.
  ELSE.
    WRITE: 'IT IS NOT AN ARMSTRONG NUMBER '.SKIP.
  ENDIF.
ENDFORM.